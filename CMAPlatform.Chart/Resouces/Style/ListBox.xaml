<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation">

    <Style x:Key="PreventionListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PreventionExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="60" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="backBor"
                                    Grid.ColumnSpan="3"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}" />
                            <Border x:Name="brd"
                                    Width="32"
                                    Height="32"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Grid.Column="2"
                                    BorderThickness="1"
                                    Background="#236274"
                                    BorderBrush="#76B1BC">
                                <Path Margin="10.666748046875,13.33331298828125,0,0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Height="5.3333740234375"
                                      Width="9.333251953125"
                                      Stretch="Fill"
                                      Opacity="1"
                                      x:Name="arrow"
                                      Data="M 10.666748046875,13.33331298828125 C10.666748046875,13.33331298828125 20,13.33331298828125 20,13.33331298828125 20,13.33331298828125 15.333251953125,18.66668701171875 15.333251953125,18.66668701171875 15.333251953125,18.66668701171875 10.666748046875,13.33331298828125 10.666748046875,13.33331298828125 z"
                                      Fill="#ffffff" />
                            </Border>
                            <Image Source="pack://application:,,,/CCP.Theme;component/Images/Icons/FileChecked51.png"
                                   Stretch="None"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Grid.Column="0"
                                   Margin="25,0,0,0" />
                            <TextBlock Grid.Column="1"
                                       HorizontalAlignment="Left"
                                       Margin="10,0,0,0"
                                       Text="{Binding Content,ElementName=txtContent}"
                                       Foreground="{TemplateBinding Foreground}"
                                       SnapsToDevicePixels="True"
                                       VerticalAlignment="Center"
                                       x:Name="txtContentblk" />
                            <ContentPresenter x:Name="txtContent"
                                              Grid.Column="1"
                                              Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    TargetName="arrow"
                                    Value="M 21,17.66668701171875 C21,17.66668701171875 11.666748046875,17.66668701171875 11.666748046875,17.66668701171875 11.666748046875,17.66668701171875 16.33349609375,12.33331298828125 16.33349609375,12.33331298828125 16.33349609375,12.33331298828125 21,17.66668701171875 21,17.66668701171875 z" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="arrow"
                                    Value="0.2" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="White" />
                            <Setter TargetName="txtContentblk"
                                    Property="Foreground"
                                    Value="White" />
                            <Setter TargetName="txtContentblk"
                                    Property="Opacity"
                                    Value="0.2" />
                            <Setter TargetName="backBor"
                                    Property="Background"
                                    Value="#395366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--带隔行换色的ListBox的样式-->
    <Style x:Key="PreventionListBoxStyle"
           TargetType="{x:Type ListBox}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <!--<Setter Property="Background"
                Value="{StaticResource ListBoxBack}">
        </Setter>-->
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="AlternationCount"
                Value="2" />
        <Setter Property="Foreground"
                Value="#FFFFFF" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource ListBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="0"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false"
                                      Template="{DynamicResource DefaultScrollViewerControlTemplate}"
                                      Padding="{TemplateBinding Padding}"
                                      Background="Transparent">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>-->
                        <Trigger Property="IsGrouping"
                                 Value="false">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ImageBrush x:Key="BackImage_MessageImg"
                ImageSource="../Images/一本账详情.png" />
    <Style x:Key="PreventionMessItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"
                                          Margin="7 0 7 0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="ItemsControl.AlternationIndex"
                                 Value="0">
                            <Setter Property="Background"
                                    Value="#21000000"
                                    TargetName="Bd" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex"
                                 Value="1">
                            <Setter Property="Background"
                                    Value="#01FFFFFF"
                                    TargetName="Bd" />
                        </Trigger>-->
                        <!--<Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#6600BFFF" />
                        </Trigger>-->
                        <!--<Trigger Property="IsSelected"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="#FF00BFFF" />
                            </Trigger>-->
                        <Trigger Property="IsEnabled"
                                 Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--带隔行换色的控制页绿色系ListBoxItem的样式-->
    <Style x:Key="PreventionListBoxItem"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBoxBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
                Value="0,0,0,0" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="FontSize"
                Value="18" />

        <Setter Property="FontWeight"
                Value="Regular" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          TextElement.Foreground="White"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Stretch"
                                          x:Name="contentP" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ListItemMouseOverBack}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#00BFFF" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentP"
                                    Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PreventionMessStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="grid"
                          UseLayoutRounding="True"
                          Background="Transparent"
                          Margin="25,0,0,0">
                        <!--<Image x:Name="image"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Stretch="None"
                                   Source="{StaticResource FoldFolderChecked51}" />-->
                        <ContentPresenter HorizontalAlignment="Left"
                                          TextElement.FontSize="18"
                                          TextElement.Foreground="White"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <!--<Image x:Name="image1"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Stretch="None"
                                   Margin="0,0,15,0"
                                   Source="{StaticResource VisualAnalysisDown}" />-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True" />
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.Setters>
                            </Trigger.Setters>
                        </Trigger>
                        <!--<Trigger Property="IsChecked"
                                     Value="True">
                                <Trigger.Setters>
                                    <Setter Property="Source"
                                            Value="{StaticResource OpenFolderChecked51}"
                                            TargetName="image" />
                                    <Setter Property="Source"
                                            Value="{StaticResource VisualAnalysisUp}"
                                            TargetName="image1" />
                                </Trigger.Setters>
                            </Trigger>-->
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Trigger.Setters>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PreventionMessStyleRadioButton"
           TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Name="grid"
                          UseLayoutRounding="True"
                          Background="Transparent"
                          Margin="30,0,0,0">
                        <!--<Image x:Name="image"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Stretch="None"
                                   Source="{StaticResource FoldFolderChecked51}" />-->
                        <ContentPresenter HorizontalAlignment="Left"
                                          Margin="5,0,0,0"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.Foreground="White"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <!--<Image x:Name="image1"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Stretch="None"
                                   Margin="0,0,15,0"
                                   Source="{StaticResource VisualAnalysisDown}" />-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True" />
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.Setters>
                            </Trigger.Setters>
                        </Trigger>
                        <!--<Trigger Property="IsChecked"
                                     Value="True">
                                <Trigger.Setters>
                                    <Setter Property="Source"
                                            Value="{StaticResource OpenFolderChecked51}"
                                            TargetName="image" />
                                    <Setter Property="Source"
                                            Value="{StaticResource VisualAnalysisUp}"
                                            TargetName="image1" />
                                </Trigger.Setters>
                            </Trigger>-->
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Trigger.Setters>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--首页风险预警样式-->
    <ControlTemplate x:Key="ScrollViewerControlTemplate1"
                     TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid"
              Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner"
                       Grid.Column="1"
                       Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                       Grid.Row="1" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    Grid.Column="0"
                                    Margin="0"
                                    Grid.Row="0" />
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       AutomationProperties.AutomationId="VerticalScrollBar"
                       Cursor="Arrow"
                       Grid.Column="1"
                       Maximum="{TemplateBinding ScrollableHeight}"
                       Minimum="0"
                       Grid.Row="0"
                       Width="33"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportHeight}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       AutomationProperties.AutomationId="HorizontalScrollBar"
                       Cursor="Arrow"
                       Grid.Column="0"
                       Maximum="{TemplateBinding ScrollableWidth}"
                       Minimum="0"
                       Orientation="Horizontal"
                       Height="33"
                       Grid.Row="1"
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportWidth}" />
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Width"
                Value="258" />
        <Setter Property="Height"
                Value="54" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true" />

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListBox}"
           x:Key="RiskMessageStyle">
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="0"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false"
                                      Template="{StaticResource ScrollViewerControlTemplate1}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false" />
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping"
                                           Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--首页风险预警样式-->
    <ControlTemplate x:Key="ScrollViewerControlTemplate2"
                     TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid"
              Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner"
                       Grid.Column="1"
                       Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                       Grid.Row="1" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    Grid.Column="0"
                                    Margin="0"
                                    Grid.Row="0" />
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       AutomationProperties.AutomationId="VerticalScrollBar"
                       Cursor="Arrow"
                       Grid.Column="1"
                       Maximum="{TemplateBinding ScrollableHeight}"
                       Minimum="0"
                       Grid.Row="0"
                       Width="33"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportHeight}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       AutomationProperties.AutomationId="HorizontalScrollBar"
                       Cursor="Arrow"
                       Grid.Column="0"
                       Maximum="{TemplateBinding ScrollableWidth}"
                       Minimum="0"
                       Orientation="Horizontal"
                       Height="33"
                       Grid.Row="1"
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportWidth}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ListBoxItem}"
           x:Key="ListBoxItemStyle">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Width"
                Value="258" />
        <Setter Property="Height"
                Value="54" />
        <Setter Property="Background"
                Value="#66020000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderThickness="0"
                            CornerRadius="20"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <!--<Setter Property="Background"
                                    Value="Red"
                                    TargetName="Bd"></Setter>-->
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}"
           x:Key="RiskMessageStyleNew">
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="0"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false"
                                      Template="{StaticResource ScrollViewerControlTemplate1}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false" />
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping"
                                           Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TimeBarPopWindowListBoxStyle"
           TargetType="ListBoxItem">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="border"
                            BorderThickness="1"
                            BorderBrush="Transparent"
                            Margin="0,4">
                        <DockPanel Background="Transparent">
                            <TextBlock Text="{Binding StationName}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding Foreground}" />
                            <!--<TextBlock DockPanel.Dock="Right"
                                       HorizontalAlignment="Right"
                                       Text="{Binding Value}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding Foreground}" />-->
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF7373"
                                                     Opacity="0.24" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="#FF4D4D" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF7373"
                                                     Opacity="0.24" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="#FF4D4D" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--预警详情弹窗 - 预警流程ListBox样式-->
    <Style x:Key="AlarmProcessListBoxStyle"
           TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="Transparent">
                        <Grid>
                            <Image Source="../Images/AlarmProcessLine.png"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Stretch" />
                            <ItemsPresenter VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlarmProcessListboxItemStyle"
           TargetType="ListBoxItem">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Margin="30,0,0,0"
                          VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Background="Transparent"
                              Grid.Row="0"
                              Grid.RowSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Grid.Column="1"
                                    BorderBrush="#00FFFF"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Padding="7,2">
                                <TextBlock Text="{Binding action}"
                                           Foreground="#CACAD8"
                                           FontSize="18"
                                           HorizontalAlignment="Center"
                                           Background="Transparent" />
                            </Border>
                        </Grid>
                        <Image Grid.Row="1"
                               Grid.RowSpan="4"
                               Source="../Images/AlarmProcessPoint.png"
                               Stretch="Uniform" />
                        <TextBlock Grid.Row="4"
                                   Background="Transparent"
                                   Text="{Binding time,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"
                                   Foreground="#DDDDDD"
                                   FontSize="16" />
                        <TextBlock Grid.Row="5"
                                   Background="Transparent"
                                   Text="{Binding operator}"
                                   Foreground="#65FFFF"
                                   HorizontalAlignment="Center"
                                   FontSize="16" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>